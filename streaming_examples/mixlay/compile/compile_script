#!/bin/bash

function error_quit {
    echo -e "$@"
    echo
    echo -e 'Usage:'
    echo -e './compile_script --clean'
    echo -e '   To clean build direcrtory. Makenek will ask for cleaning 3rd-party libraries.'
    echo
    echo -e './compile_script --all'
    echo -e '   To compile the code.'
    exit 1
}

# Add paths to the compression tool
export STREAM_SRC="$PWD/../../../DSTB"
export STREAM_INC=" -I"${STREAM_SRC}


# Nek5000 parameters at the end of Ftn compiler, add where to find the tools
export CASE="mixlay"
export NEK_SOURCE_ROOT="$PWD/../../../Nek5000"
export FC="mpifort"${STREAM_INC}
export CC="mpicc"
export CXX="mpicxx"
export FFLAGS="-mcmodel=medium"
export CFLAGS=""
export PPLIST="ADIOS2"
export USR="frame.o mntrlog_block.o mntrlog.o mntrtmr_block.o mntrtmr.o rprm_block.o rprm.o io_tools_block.o io_tools.o"
USR+=" chkpoint.o chkpt_mstp.o map2D.o stat.o stat_IO.o math_tools.o io_stream.o"
export USR_LFLAGS=""

# Compile the in-situ writer

# Copy the config folder for the in-situ writer
cp -r ${STREAM_SRC}/config .


# arguments
args=("$@")
argsnr=$#

# check arguments
# parameters number check
if [ $[argsnr] -ne 1 ]; then
    error_quit 'Wrong arguments number!'
fi

for il in "$@"
do
case $il in
        --clean)
		rm compressor
		rm -r config
		${NEK_SOURCE_ROOT}/bin/makenek clean
                shift
                ;;
        --all)
                ${NEK_SOURCE_ROOT}/bin/makenek ${CASE}
                shift
                ;;
        *) 
                error_quit 'Wrong argument.'
                ;;
esac
done
